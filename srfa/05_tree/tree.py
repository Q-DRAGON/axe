"""
本次作业是 tree 相关的题目和 stack queue 相关的应用题目

有问题多讨论！
自己想出解法是基本没有意义的，最重要的是把这道题的解法过一遍有个印象
想着独创的人最终都学得不太好，因为抓不住重点
我会把一些我认为难的题目直接写出解题思路，不要自己强行硬刚不看思路

本次使用下面的结构，和 List 一样是只有节点没有主类
你应该写几个辅助函数方便你写代码和测试
具体哪些辅助函数，不懂就问

Class TreeNode:
    def __init__(n):
        self.value = n
        self.left = None
        self.right = None


1, 用递归实现二叉树的中序遍历算法

2, 用递归实现二叉树的后序遍历算法

3, 用递归实现二叉树的前序遍历算法

4, 用队列实现广度优先算法，注明时空复杂度

5, 用栈实现深度优先算法，注明时空复杂度

6, 用非递归算法实现二叉树的中序遍历

7, 递归翻转二叉树

8, 检查二叉树是否是镜像对称的

9, 给定一个二叉树，找出其最大深度

10, 对于一棵有 n 个节点的二叉树, 请设计在 θ(n) 时间内完成先序遍历算法和后序遍历算法
    θ(n) 的含义是，去除了常数的 O(n), 也就是说 θ(n) 就是确定的 n
    在这里意思是一次遍历得到先序和后序的结果

11, 选做，能否用栈实现广度优先？优势是什么？
"""
